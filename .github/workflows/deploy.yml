name: CI/CD Docker

on:
  push:
    branches: [main]
env:
  DOCKER_IMAGE: ghcr.io/onejaejae/together-api
  VERSION: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SECRET_TOKEN }}
          submodules: true
      - name: Build ant test with Docker Compose
        run: docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit
  build:
    needs: test
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.SECRET_TOKEN }}
          submodules: true
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }} # runner 설정에서 읽어들일거에요.
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}

  deploy:
    needs: build
    name: Deploy
    runs-on: [self-hosted, label-development]
    steps:
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Stop and Remove Existing Container
        run: |
          if docker ps -q --filter "name=together-api" | grep -q .; then
            docker stop together-api
            docker rm -fv together-api
          else  
            echo "No Container found"
          fi
      - name: Remove All Containers
        run: |
          if docker images -q | grep -q .; then
            docker rmi -f $(docker images -q)
          else
            echo "No images found"
          fi
      - name: Docker run
        run: |
          docker run -d -p 80:3000 --name together-api --restart always ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
